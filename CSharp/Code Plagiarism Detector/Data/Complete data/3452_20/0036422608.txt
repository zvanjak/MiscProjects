class SortRazlPolje
{  
 private:
        int *_podaci;
        int _BrojElem;

    
  public:
        SortRazlPolje ();
        int Dodaj (int Broj);
        int *VratiSortPolje (int &n);
        ~SortRazlPolje();

};
SortRazlPolje::SortRazlPolje(){
    _podaci = new int;
    _BrojElem = 0;

}
int SortRazlPolje::Dodaj (int Broj){
    int *t;
    int i;

        if (_BrojElem == 0){
           _podaci[0] = Broj;
           _BrojElem = 1;
           return 1;
 }
        for (i = 0; i < _BrojElem; i++)
        if (_podaci[i] == Broj)
            return 1;

    _BrojElem++;
     t = new int[_BrojElem];
     if (t == NULL)
        return 0;

    for (i = 0; i < _BrojElem - 1; i++)
        t[i] = _podaci[i];

    t[_BrojElem - 1] = Broj;
    delete []_podaci;
    _podaci = t;

    return 1;

}
int *SortRazlPolje::VratiSortPolje (int &n){
    int min, i, j;
    int t;

    if (_BrojElem == 0)
        return NULL;

    for (i = 0; i < _BrojElem; i++){
        min = i;
        for (j = i + 1; j < _BrojElem; j++)
            if (_podaci [j] < _podaci [min])
                min = j;

        t = _podaci [i];
        _podaci [i] = _podaci [min];
        _podaci [min] = t;
    }
    n = _BrojElem;
    return _podaci;
}
SortRazlPolje::~SortRazlPolje(){
    delete []_podaci;
}