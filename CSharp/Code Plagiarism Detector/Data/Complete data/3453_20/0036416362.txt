class SortRazlPolje
{
    private:
        int *_podaci;
        int _BrojElem;

    public:
        SortRazlPolje ();
        int Dodaj (int Broj);
        int *VratiSortPolje (int &n);
        ~SortRazlPolje();
};

SortRazlPolje::SortRazlPolje(){

    _podaci = new int;

    _BrojElem = 0;

}

int SortRazlPolje::Dodaj (int Broj){

    int *temp;
    int i;

    if (_BrojElem == 0){
        _podaci[0] = Broj;
        _BrojElem = 1;
        return 1;
    }

        for (i = 0; i < _BrojElem; i++)
        if (_podaci[i] == Broj)
            return 1;

    _BrojElem++;

    temp = new int[_BrojElem];

    if (temp == NULL)
        return 0;

    for (i = 0; i < _BrojElem - 1; i++)
        temp[i] = _podaci[i];

    temp[_BrojElem - 1] = Broj;

    delete []_podaci;

    _podaci = temp;

    return 1;

}

int *SortRazlPolje::VratiSortPolje (int &n){

    int max, i, j;
    int temp;

    if (_BrojElem == 0)
        return NULL;

    for (i = 0; i < _BrojElem; i++){
        max = i;
        for (j = i + 1; j < _BrojElem; j++)
            if (_podaci [j] > _podaci [max])
                max = j;

        temp = _podaci [i];
        _podaci [i] = _podaci [max];
        _podaci [max] = temp;
    }
    n = _BrojElem;
    return _podaci;
}

SortRazlPolje::~SortRazlPolje(){
    delete []_podaci;
}