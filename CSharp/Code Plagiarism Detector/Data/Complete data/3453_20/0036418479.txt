class SortRazlPolje
{
private:
	int *polje;
	int duzina;

public:
	SortRazlPolje();
	~SortRazlPolje();

public:
	int Dodaj(int Broj);
	int *VratiSortPolje(int &n);
};

SortRazlPolje::SortRazlPolje()
{
	duzina = 0;
	polje = (int*)malloc(duzina * sizeof(int));
}

SortRazlPolje::~SortRazlPolje()
{
	free(polje);
	duzina = 0;
}

int SortRazlPolje::Dodaj(int Broj)
{
	for(int i = 0; i < duzina; i++)
	{
		if(Broj == polje[i])
		{
			return 0;
		}
	}

	int *novo = (int*)realloc(polje, (duzina+1)*sizeof(int));

	if(novo == 0)
	{
		return 0;
	}

	duzina++;
	polje = novo;

	int i;
	for(i = duzina-1; i > 0; i--)
	{
		if(novo[i-1] < Broj)
		{
			novo[i] = novo[i-1];
		}
		else
		{
			break;
		}
	}

	novo[i] = Broj;

	return 1;
}

int *SortRazlPolje::VratiSortPolje(int &n)
{
	n = duzina;

	if(duzina == 0)
	{
		return 0;
	}
	else
	{
		return polje;
	}
}