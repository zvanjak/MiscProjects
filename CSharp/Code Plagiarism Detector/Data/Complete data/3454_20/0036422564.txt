class RazlPolje{
private:
	int *a;
	int n;
	int max;
public:
	RazlPolje();
	int Dodaj(int Broj);
	int Izbaci(int Broj);
	int SumaPolja();
	~RazlPolje();
};

RazlPolje::RazlPolje(){
	int i;
	max=10;
	n=0;
	a=(int*) malloc(max*sizeof(int));
	for(i=0;i<max;i++) a[i]=0;
}

RazlPolje::Dodaj(int Broj){
	int i;
	for(i=0;i<n;i++) if (a[i]==Broj) return 1;
	if (n>max) {
		max=max+10;
		if(realloc(a,max*sizeof(int))==NULL) {
			max=max-10;
			return 0;
		}
		for(i=n;i<max;i++) a[i]=0;
	}
	n++;
	a[n]=Broj;
	return 1;
}

RazlPolje::Izbaci(int Broj){
	int i;
	for (i=0;i<n;i++)
		if(a[i]==Broj){
			a[i]=a[n];
			a[n]=0;
			n--;
			return 1;
		}
	return 0;
}

RazlPolje::SumaPolja(){
	int i,sum=0;
	for(i=0;i<n;i++)sum=sum+a[i];
	return sum;
}

RazlPolje::~RazlPolje(){
	free(a);
}
