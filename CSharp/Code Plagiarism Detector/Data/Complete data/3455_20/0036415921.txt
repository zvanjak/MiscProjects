#define DEFAULT_VELICINA 10
#pragma once

class Skup
{
private:
	float *_elementi;
	int _brojElemenata;
public:
	Skup();
	Skup(int brojElemenata);
	void Dodaj(float elementi);
	float BrojElemenata();
	int BrojPojavljivanja(float element);
	~Skup();
};

Skup::Skup() {
	_elementi = (float *) malloc(DEFAULT_VELICINA * sizeof(float));
	_brojElemenata = 0;
}

Skup::Skup(int brojElemenata){
	_elementi =  (float *) malloc(brojElemenata * sizeof(float));	
	_brojElemenata = 0;
}

void Skup::Dodaj(float element){
	_elementi[_brojElemenata++] = element;
}

float Skup::BrojElemenata(){
	return (float)_brojElemenata;
}

int Skup::BrojPojavljivanja(float element){
	int brojac = 0;

	for (int i = 0; i < _brojElemenata; i++)
		if (_elementi[i] == element)
			brojac++;

	return brojac;
}

Skup::~Skup(){
	free(_elementi);
}
