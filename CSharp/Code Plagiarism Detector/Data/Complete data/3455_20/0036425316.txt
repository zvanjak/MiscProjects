class Skup
{
private:
    float *_elementi;
    int _brojElemenata;

public:
    Skup();
    Skup(int brojElemenata);
    void Dodaj(float element);
    float BrojElemenata();
    int BrojPojavljivanja(float element);
    ~Skup();
};

Skup::Skup()
{
    _elementi=(float*)malloc(sizeof(float)*10);
    _brojElemenata=0;
}

Skup::Skup(int brojElemenata)
{
    _elementi=(float*)malloc(sizeof(float)*brojElemenata);
    _brojElemenata=0;
}

void Skup::Dodaj(float element)
{
    int i;
    _brojElemenata++;
    for(i=0; i<_brojElemenata; i++)
    {
        if(i==_brojElemenata-1) _elementi[i]=element;
    }
}

float Skup::BrojElemenata()
{
    return (float)_brojElemenata;
}

int Skup::BrojPojavljivanja(float element)
{
    int i, broj=0;
    for(i=0;i<_brojElemenata; i++)
    {
        if(_elementi[i]==element) broj++;
    }
    return broj;
}

Skup::~Skup()
{
    delete []_elementi;
}