class CjelobrojniNiz
{
public:
int *polje;
int brelem;

int SviJednaki;


CjelobrojniNiz(const CjelobrojniNiz &copy)

{ brelem = copy.brelem;
polje = (int*) malloc(sizeof(int)*brelem);

if( polje == NULL ) throw "Nema memorije";


for( int i=0; i<brelem; i++ ) polje[i] = copy.polje[i];

}




CjelobrojniNiz::CjelobrojniNiz(int *adresa, int n)
{
int i, pom, jednaki = 1;

brelem = n;
polje = (int *)malloc(brelem*sizeof(int));
for(i = 0; i < n; i++)
{
polje[i] = adresa[i];
}
pom = polje[0];
for(i = 0; i < n; i++)
if(polje[i] != pom)
jednaki = 0;
if(jednaki == 0)
SviJednaki = 0;
else
SviJednaki = 1; 

}

int CjelobrojniNiz::Usporedi(CjelobrojniNiz niz)
{
int jednaki = 1;
int i;
if(niz.brelem != brelem)
return 0;
for(i = 0; i < niz.brelem; i++)
{
if(polje[i] != niz.polje[i])
jednaki = 0;
}
return jednaki;
}

int *VratiRazliku(CjelobrojniNiz niz, int* n)
{
int i, j, br = 0, prethodni;
int ukljuci;

int *razlika;
razlika = (int*)malloc(brelem*sizeof(int));
for(i = 0; i < brelem; i++)
{
ukljuci = 1;
if(i != 0)
{
prethodni = polje[i-1];
for(j = 0; j < niz.brelem; j++)
if((polje[i] == niz.polje[j]) || (polje[i]==prethodni))
ukljuci = 0;

}
else
{
for(j = 0; j < niz.brelem; j++)
if((polje[i] == niz.polje[j]))
ukljuci = 0;
}
if(ukljuci == 1)
{
razlika[br] = polje[i];
br++;
}
}
*n = br;
return razlika;
}

~CjelobrojniNiz() {
free (polje);
}

};
