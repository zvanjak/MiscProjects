#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
#include<string.h>
typedef struct {
char ime [20 + 1];
char prezime [30 + 1];
char jmbag [10 + 1];
int ocjena;
} tip;

typedef struct n {
tip element;
struct n *sljed;
} atom;

int dodaj (atom **glavap, tip element)
{
atom *novo;

if ((novo = (atom *) malloc(sizeof(atom))) == NULL) return 0;

strcpy((novo->element).ime, element.ime);
strcpy((novo->element).prezime, element.prezime);
strcpy((novo->element).jmbag, element.jmbag);
(novo->element).ocjena = element.ocjena;

novo->sljed = *glavap;
*glavap = novo;

return 1;
}

int brojElementa (atom *glava)
{
atom *pa; int NumerEle = 0;
for (pa = glava; pa != NULL; pa = pa->sljed) NumerEle++;

return NumerEle;
}

int minOcjena (atom *glava)
{
atom *pa; int min;

if (glava == NULL) return -1;

min = (glava->element).ocjena;
for (pa = glava; pa != NULL; pa = pa->sljed)
if ((pa->element).ocjena < min) min = (pa->element).ocjena;

return min;
}

float prosjOcjena (atom *glava)
{
atom *pa; int zbroj = 0; int num = 0;

if (glava == NULL) return -1;

for (pa = glava; pa != NULL; pa = pa->sljed) {
num++; zbroj += (pa->element).ocjena;
}

return ((float) zbroj / num);

}

int izbaciImeSadrzi (atom **glavap, char *imePodniz)
{
atom *pa, *ppa; int num = 0;

     for (pa = *glavap; pa != NULL; ) {
         if (strstr ((pa->element).ime, imePodniz)) {
                    if (pa == *glavap) {
                       ppa = (*glavap)->sljed;
                       free (*glavap);
                       *glavap = ppa;
                       pa = ppa;
                       num++;
                                      }

                     else {
                          for (ppa = *glavap; ppa->sljed != pa; ppa = ppa->sljed);
                          ppa->sljed = pa->sljed;
                          free (pa);
                          pa = ppa->sljed;
                          num++;
                          }
                                                       }

          else pa = pa->sljed;
                              
                                       }
return num;
}