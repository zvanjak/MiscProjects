#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct {
   char ime [20 + 1];
   char prezime [30 + 1];
   char jmbag [10 + 1];
   int ocjena;
   } tip;

typedef struct n {
   tip element;
   struct n *sljed;
   } atom;

int dodaj (atom **glavap, tip element){
  atom *novi;
  if ((novi = (atom *) malloc(sizeof(atom))) == NULL) return 0;
  strcpy ((novi->element).ime, element.ime);
  strcpy ((novi->element).prezime, element.prezime);
  strcpy ((novi->element).jmbag, element.jmbag);
  (novi->element).ocjena = element.ocjena;
  novi->sljed = *glavap;
  *glavap = novi;
  return 1;
  }

void ispisi(atom *glava){
   atom *a;
   a=glava;
   for(;a;a=a->sljed)
      printf("%s\n%s\n%s\n%d\n",(a->element).ime, (a->element).prezime, (a->element).jmbag, (a->element).ocjena);
   return;
}

int brojElementa (atom *glava){
  atom *p; int NumEle = 0;
  for (p = glava; p != NULL; p = p->sljed) NumEle++;
  return NumEle;
  }

int minOcjena (atom *glava){
  atom *p; int min;
  if (glava == NULL) return -1;
  min = (glava->element).ocjena;
  for (p = glava; p != NULL; p = p->sljed)
    if ((p->element).ocjena <min) min = (p->element).ocjena;
  return min;
  }

int maksOcjena (atom *glava){
  atom *p; int maks;
  if (glava == NULL) return -1;
  maks = (glava->element).ocjena;
  for (p = glava; p != NULL; p = p->sljed)
    if ((p->element).ocjena >maks) maks = (p->element).ocjena;
  return maks;
  }

float prosjOcjena (atom *glava){
  atom *p; int zbroj = 0; int num = 0;
  if (glava == NULL) return -1;
  for (p = glava; p != NULL; p = p->sljed) {
      num++;
      zbroj += (p->element).ocjena;
      }
  return ((float) zbroj / num);
}

int izbaciImeSadrzi(atom **glavap, char *imePodniz){
   atom *p, *pp; int num = 0;
   for (p = *glavap; p != NULL; ) {
       if (strstr ((p->element).ime, imePodniz)) {
           if (p == *glavap) {
               pp = (*glavap)->sljed;
               free (*glavap);
               *glavap = pp;
               p = pp;
               num++;
               }
           else {
               for (pp = *glavap; pp->sljed != p; pp = pp->sljed);
               pp->sljed = p->sljed;
               free (p);
               p = pp->sljed;
               num++;
               }
           }
       else p = p->sljed;
       }
   return num;
}

int izbaciPrezimePocinjeS(atom **glavap, char *prezimePocetak){
   atom *p, *pp; int num = 0;
   for (p = *glavap; p != NULL; ) {
       if (strstr ((p->element).prezime, prezimePocetak)==(p->element).prezime) {
           if (p == *glavap) {
               pp = (*glavap)->sljed;
               free (*glavap);
               *glavap = pp;
               p = pp;
               num++;
               }
           else {
               for (pp = *glavap; pp->sljed != p; pp = pp->sljed);
               pp->sljed = p->sljed;
               free (p);
               p = pp->sljed;
               num++;
               }
           }
       else p = p->sljed;
       }
   return num;
}

int main(){
   atom *glava;
   char *a="no";
   tip bla;
   int i,num;
   for(i=0;i<7;i++){
      scanf(" %s %s %s %d", bla.ime, bla.prezime, bla.jmbag, &bla.ocjena);
      if(!(dodaj(&glava, bla))) return 0;
      }
   ispisi(glava);
   printf("min ocjena: %d\n", minOcjena(glava));
   printf("max ocjena: %d\n",maksOcjena(glava));
   printf("prosjek ocjena: %lf\n",prosjOcjena(glava));
   printf("broj elem prije : %d\n",brojElementa(glava));
   num=izbaciPrezimePocinjeS(&glava, a);
   printf("broj izbacenih : %d\n",num);
   ispisi(glava);
   printf("broj elem poslije : %d\n",brojElementa(glava));
   return 0;
}