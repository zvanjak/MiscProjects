typedef struct {
        char ime [20 + 1];
        char prezime [30 + 1];
        char jmbag [10 + 1];
        int ocjena;
} tip;

typedef struct p {
        tip element;
        struct p *sljed;
} atom;



int brojElementa (atom *glava) {
  atom *a; 
  int Br;
  Br = 0;
  for (a = glava; a != NULL; a = a->sljed) Br++;
  return Br;
}


int dodaj (atom **glavap, tip element) {
  atom *a;
  if ((a = (atom *) malloc(sizeof(atom))) == NULL) return 0;
  strcpy ((a->element).ime,element.ime);
  strcpy ((a->element).prezime,element.prezime);
  strcpy ((a->element).jmbag,element.jmbag);
  (a->element).ocjena = element.ocjena;
  a->sljed = *glavap;
  *glavap = a;
  return 1;
}

int minOcjena (atom *glava) {
  atom *a; 
  int min;
  if (glava == NULL) return -1;
  min = (glava->element).ocjena;
  for (a = glava;a != NULL;a = a->sljed) {
	  if ((a->element).ocjena < min) 
		  min = (a->element).ocjena;
  }
  return min;
}

float prosjOcjena (atom *glava) {
  atom *a; 
  int suma; 
  int br;
  float prosjek;
  suma = 0;
  br = 0;
  if (glava == NULL) return -1;
  for (a = glava;a != NULL;a = a->sljed) {
      br++; 
	  suma = suma + (a->element).ocjena;
  }
  prosjek = (float)suma / br;
  return prosjek;
}

int izbaciImeSadrzi (atom **glavap, char *imePodniz) {
 atom *a,*aa; 
 int br;
 br = 0;
 for (a = *glavap;a != NULL;) {
	 if (strstr ((a->element).ime, imePodniz)) {
         if (a == *glavap) {
               aa = (*glavap)->sljed;
               free (*glavap);
		       *glavap = aa;
		       a = aa;
		       br++;
         }
         else {		   
		       for (aa = *glavap;aa->sljed != a;aa = aa->sljed);
		       aa->sljed = a->sljed;
		       free (a);
		       a = aa->sljed;
		       br++;
          }
     }
     else a = a->sljed;
 }
 return br;
} 




