typedef struct {
        char ime[20+1];
        char prezime[30+1];
        char jmbag[10+1];
        int ocjena;
}tip;

typedef struct s{
        tip element;
        struct s *sljed;
}atom;

int brojElementa(atom *glava){
  atom *tg; 
  int broj=0;
  for(tg=glava; tg!=NULL; tg=tg->sljed) broj++;
  return broj;
}

int dodaj(atom **glavap, tip element){
	atom *novi=(atom *) malloc(sizeof(atom));
	if(novi==NULL) return 0;
	strcpy((novi->element).ime, element.ime);
	strcpy((novi->element).prezime, element.prezime);
	strcpy((novi->element).jmbag, element.jmbag);
	(novi->element).ocjena=element.ocjena;
	novi->element=element;
	novi->sljed=*glavap;
	*glavap=novi;
	return 1;
}

int minOcjena(atom *glava){
  atom *tg; 
  int min;
  if(glava==NULL) return -1;
  min=(glava->element).ocjena;
  for(tg=glava; tg!=NULL; tg=tg->sljed) if ((tg->element).ocjena < min) min=(tg->element).ocjena;
  return min;
}

float prosjOcjena(atom *glava){
  atom *tg; 
  int brocj=0; 
  int suma=0;
  float pro;
  if(glava==NULL) return -1;
  for (tg=glava; tg!=NULL; tg=tg->sljed) {
      brocj++; 
	  suma +=(tg->element).ocjena;
  }
  pro=suma/brocj;
  return pro;
}

int izbaciImeSadrzi(atom **glavap, char *imePodniz){
	atom *tg=*glavap;
	atom *ttg;
	int izbrisani=0;
	while(tg!=NULL){
		if(strstr((tg->element).ime,imePodniz)!=NULL){
			if(tg==*glavap){	
				ttg=(*glavap)->sljed;
				free(*glavap);
				*glavap=ttg;
				tg=ttg;
				izbrisani++;
			} 
			else {
				for(ttg=*glavap; ttg->sljed !=tg; ttg=ttg->sljed);
				ttg->sljed=tg->sljed;
				free(tg);
				tg=ttg->sljed;
				izbrisani++;
			}
		}
		else tg=tg->sljed;
	}
	return izbrisani;
}