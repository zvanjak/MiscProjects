typedef struct{
	char ime[20+1];
	char prezime[30+1];
	char jmbag [10+1];
	int ocjena;
 } tip;
struct atom{
	tip element;
	atom *sljed;
};
int brojElementa (atom *glava)
{int br=0;
	atom *p;
	for (p=glava;p!=NULL;p=p->sljed)
		br++;
	return br;
}
int dodaj (atom **glavap, tip element)
{
	atom *novi;
	if((novi=(atom *) malloc(sizeof(atom)))==NULL)
		return 0;
	novi->element=element;
	novi->sljed=*glavap;
	*glavap = novi;
}
int minOcjena (atom *glava)
{
	int min;
	atom *p;
	if(glava!=NULL)
	{
		min=(glava->element).ocjena;
		for(p=glava;p!=NULL;p=p->sljed)
		{
			if(min < (p->element).ocjena)
				min=(p->element.ocjena);
		}
		return min;
	}
	else return -1;
}
int prosjOcjena(atom *glava)
{
	int pr=0,br=0;
	atom *p;
	if(glava!=NULL)
	{
		for(p=glava;p!=NULL;p=p->sljed)
		{
			br++;
			pr+=(p->element).ocjena;
		}
		return pr/br;
	}
	else return -1;
}
int izbaciImeSadrzi (atom **glavap, char * imePodniz){
	 atom *p, *pp; int br = 0;
     for (p = *glavap; p != NULL; ) {
         if (strstr ((p->element).ime, imePodniz)!=NULL) {
             if (p == *glavap) {
                 pp = (*glavap)->sljed;
                 free (*glavap);
                 *glavap = pp;
                 p = pp;
                 br++;
                 }
             else {
                 for (pp = *glavap; pp->sljed != p; pp = pp->sljed);
                 pp->sljed = p->sljed;
                 free (p);
                 p = pp->sljed;
                 br++;
                 }
             }
         else p = p->sljed;
         }
     return br;
  }