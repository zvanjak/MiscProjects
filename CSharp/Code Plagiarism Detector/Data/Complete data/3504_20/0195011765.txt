typedef struct {
    char ime [20+1];
    char prezime [30+1];
    char jmbag [10+1];
    int ocjena;
} tip;

struct at {
  tip element;
  struct at *sljed; 
};

typedef struct at atom;

int brojElementa (atom *glava) {
  int broj = 0;
  atom *p;

  for (p = glava; p != NULL; p = p->sljed) {
      broj ++;
  }
  return broj;
}

int dodaj (atom **glavap, tip element) {
  atom *novi;

  if ((novi = (atom *) malloc(sizeof(atom))) == NULL) 
    return 0;
  novi->element = element;
  novi->sljed = *glavap;
  *glavap = novi;
  return 1;
}

int minOcjena (atom *glava) {
  int ocj = glava->element.ocjena;
  atom *pp;

  if (glava == NULL)
    return -1;
  for (pp = glava; pp != NULL; pp = pp->sljed) {
    if (pp->element.ocjena < ocj)
      ocj = pp->element.ocjena;
  }
  return ocj;
}

float prosjOcjena (atom *glava) {
  int  br = 0;
  float prosj = 0.;
  atom *p;

  if (glava == NULL)
    return -1;
  for (p = glava; p != NULL; p = p->sljed) {
    prosj += p->element.ocjena;
    br++;
  }
  prosj /= br;
  return prosj;
}

int izbaciImeSadrzi (atom **glavap, char *ImePodniz) {
  atom **pom, *ppom;
  int n = 0;

  for (pom = glavap; *pom; pom = &((*pom)->sljed)) {
    if (strcmp (ImePodniz, (*pom)->element.ime) < 0) {
      n++;
      ppom = *pom;
      *pom = (*pom)->sljed;
      free(ppom);
    }
  }
  return n;
}