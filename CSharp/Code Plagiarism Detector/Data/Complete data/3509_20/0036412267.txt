typedef struct {
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;

struct z {
	tip element;
	struct z *sljed;
};

typedef struct z atom;

int dodaj(atom** glavap, tip element){
	atom* novi;
	if((novi=(atom *) malloc(sizeof(atom)))== NULL)
	return 0;
	novi->element = element;
	novi->sljed = *glavap;
	*glavap = novi;
return 1;
}


int brojElementa (atom *glava)
{
  atom *p; int NumEle = 0;
  for (p = glava; p != NULL; p = p->sljed) NumEle++;
  
  return NumEle;
}


int minOcjena (atom* glava){
	atom* p; int min;
	if (!glava) return -1;
	min = glava->element.ocjena;
	for(p = glava; p ; p=p->sljed)
	min= p->element.ocjena < min ? p->element.ocjena : min ;
return min ;
}

int izbaciPrezimeSadrzi (atom **glavap, char* prezimePodniz){
	atom* p, *pp; int n = 0;
	if (*glavap == NULL) return 0;
	for (p = *glavap; p ; p = p->sljed){
		if (strstr(p->element.prezime, prezimePodniz) != NULL){
			if ( p == *glavap){ 
				pp=(*glavap)->sljed;
				free(*glavap);
				*glavap = pp;
			} else { 
			for ( pp = *glavap ; pp->sljed != p ; pp = pp->sljed); 
				pp->sljed = p->sljed; 
				free (p) ;
				}
			n++ ; 
												}
										}
return n;
}

float prosjOcjena(atom * glava)
{
	int br = 0;
	float sum = 0;
		while (glava != NULL)
	{
sum += (float) glava->element.ocjena;
br++;
glava = glava->sljed;
	}
return sum / br;
}