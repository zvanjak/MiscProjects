typedef struct {
  char ime[20+1];
  char prezime[30+1];
  char jmbag[10+1];
  int ocjena;
} tip;

typedef struct ttt {
  tip element;
  struct ttt *sljed;
} atom;


int dodaj (atom **glavap, tip element) {
  atom *novi;
  if ((novi = (atom *) malloc(sizeof(atom))) == NULL) 
		return 0;
  novi->element = element;
  novi->sljed = *glavap;
  *glavap = novi;
 	
  return 1;
}



int izbaciPrezimeSadrzi (atom **glava, char *prezimePodniz) {
  atom *x, *y;
  int b=0;
  x=*glava;
  y=(*glava)->sljed;
  while(y!=NULL){
	  if(strstr(y->element.prezime,prezimePodniz)!=NULL){
	    x->sljed=y->sljed;
		free(y);
		y=x->sljed;
		b++;
	  } else {
	    x=x->sljed; 
		y=y->sljed;
	  }
  }
  if(strstr((*glava)->element.prezime,prezimePodniz)!=NULL){
    x=(*glava)->sljed;
	free(*glava);
	*glava=x;
	b++;
  }
  return b;
}

int brojElementa(atom *glava){
  atom *u;
  int b=0;
  u=glava;
  while(u!=NULL) {b++; u=u->sljed;}
  return b;
}

int minOcjena(atom *glava){
  atom *u;
  int mino=500,o;
  if(glava==NULL) return -1;
  u=glava;
  while(u!=NULL) {
    o=u->element.ocjena;
	if(o<mino) mino=o;
	u=u->sljed;
  }
  return mino;
}

float prosjOcjena(atom *glava){
  atom *u;
  int suma=0,b=0;
  u=glava;
  if(glava==NULL) return -1;
  while(u!=NULL) {
    b++;
	suma+=u->element.ocjena;
	u=u->sljed;
  }
  return (float)suma/b;
}
