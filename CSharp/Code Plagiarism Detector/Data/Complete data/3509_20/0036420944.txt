typedef struct {
      char ime[20+1];
      char prezime[30+1];
      char jmbag[10+1];
      int  ocjena;
} tip;

typedef struct z {
        tip element;
        struct z *sljed;
} atom;

int brojElementa(atom *glava){
        int brojac=0;
        atom *pom;
        for (pom= glava; pom !=NULL ; pom=pom->sljed) brojac++;
        return brojac;
}

int dodaj (atom **glavap, tip element){
  atom *novi;
  if ((novi = (atom *) malloc(sizeof(atom))) == NULL)  return 0;
  novi->element = element;
  novi->sljed = *glavap;
  *glavap = novi;
  return 1;
}

int minOcjena (atom *glava)
{
  atom *pom; int min;
  if (glava == NULL) return -1;
  min = (glava->element).ocjena;
  for (pom = glava; pom != NULL; pom = pom->sljed)
      if ((pom->element).ocjena < min) min=(pom->element).ocjena;
  return min;
}

float prosjOcjena (atom *glava){
  atom *p; int zbroj = 0; int n= 0;
  if (glava == NULL) return -1;
 
  for (p = glava; p != NULL; p = p->sljed) {
      n++; zbroj += (p->element).ocjena;
  }
 
  return ((float) zbroj/n);
}

int izbaciPrezimeSadrzi (atom **glavap, char * prezimePodniz)
{
 atom *p, *pp; int num = 0;

 for (p = *glavap; p != NULL; ) {
     if ((strstr ((p->element).prezime, prezimePodniz) != NULL)){
         if (p == *glavap) {
               pp = (*glavap)->sljed;
               free (*glavap);
                       *glavap = pp;
                       p = pp;
                       num++;
         }
        
          else {                  
                       for (pp = *glavap; pp->sljed != p; pp = pp->sljed);
                       pp->sljed = p->sljed;
                       free (p);
                       p = pp->sljed;
                       num++;
          }
     }
    
     else p = p->sljed;
 }

 return num;
} 
