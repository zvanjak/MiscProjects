typedef struct {
		char ime[20+1];
		char prezime[30+1];
		char jmbag[10+1];
		int ocjena;
}tip;

typedef struct atom{
	atom* sljed;
	tip element;
} atom;

int brojElementa(atom *glava) {
	int br = 0;	

	while (glava != NULL) {
		br ++;
		glava = glava->sljed;
	}
	
	return br;

}

int dodaj (atom **glavap, tip element) {	
	atom *novi;
	if ((novi=(atom *) malloc(sizeof(atom))) == NULL) return 0;	
	
	memcpy((void*)&(novi->element),(void*)&element,sizeof(element));
	novi->sljed = (*glavap);

	*glavap = novi;

	return 1;
}


int minOcjena(atom *glava) {
	int br = 0,min;	
	if (glava == NULL) return -1;
	
	min = glava->element.ocjena;
	
	while (glava->sljed != NULL) {	
		glava = glava->sljed;
		if (glava->element.ocjena < min) min = glava->element.ocjena; 
	}
	
	return min;

}

float prosjOcjena(atom *glava) {
	float suma = 0;
	int br;	
	if (glava == NULL) return -1;
	
	suma = (float)glava->element.ocjena;
	br = 1;

	while (glava->sljed != NULL) {	
		glava = glava->sljed; 
		suma += glava->element.ocjena;	
		br++;	
	}
	
	return suma/br;
}


int izbaciPrezimeSadrzi(atom **glavap, char *prezimePodniz) {
	int br = 0;	
	atom *e, *prev; 
	atom *tmp;

	e = *glavap;
	prev = (atom *)glavap;
	

	while (e != NULL) {
		if (strstr(e->element.prezime, prezimePodniz) != NULL) {
			prev->sljed = e->sljed;
			br++;
			tmp=e;
			e = e->sljed;
			free (tmp);
		}
		else {
			prev = e;
			e = e->sljed;
		}			
	}
	
	return br;




}