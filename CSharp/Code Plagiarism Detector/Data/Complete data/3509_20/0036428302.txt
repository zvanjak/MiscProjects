typedef struct{
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;

struct at {
  tip element;
  struct at *sljed; 
};
typedef struct at atom;

int brojElementa(atom *glava){
	atom *p;
	int b=0;
	for(p=glava;p;p=p->sljed)
		b++;
	return b;
}

int dodaj(atom **glavap, tip element){
	atom *novi;
	if(!(novi=(atom *)malloc(sizeof(atom))))
		return 0;
	strcpy ((novi->element).ime, element.ime);
	strcpy ((novi->element).prezime, element.prezime);
	strcpy ((novi->element).jmbag, element.jmbag);
	(novi->element).ocjena = element.ocjena;
	novi->sljed=*glavap;
	*glavap=novi;
	return 1;
}

int minOcjena(atom *glava){
	if(!glava) return -1;
	atom *p;
	int min;
	p=glava;
	min=(glava->element).ocjena;
	for(p=p->sljed;p;p=p->sljed)
		if((p->element).ocjena < min)
			min=(p->element).ocjena;
	return min;
}

float prosjOcjena(atom *glava){
	if(!glava) return -1;
	float prosjek;
	int suma=0,n=0;
	atom *p;
	for(p=glava;p;p=p->sljed){
		suma+=(p->element).ocjena;
		n++;
	}
	prosjek=(float)suma/n;
	return prosjek;
}

int izbaciPrezimeSadrzi(atom **glavap, char *prezimePodniz){
   atom *p, *pp; int num = 0;
   for (p = *glavap; p != NULL; ) {
       if (strstr ((p->element).prezime, prezimePodniz)) {
           if (p == *glavap) {
               pp = (*glavap)->sljed;
               free (*glavap);
               *glavap = pp;
               p = pp;
               num++;
               }
           else {
               for (pp = *glavap; pp->sljed != p; pp = pp->sljed);
               pp->sljed = p->sljed;
               free (p);
               p = pp->sljed;
               num++;
               }
           }
       else p = p->sljed;
       }
   return num;
}
