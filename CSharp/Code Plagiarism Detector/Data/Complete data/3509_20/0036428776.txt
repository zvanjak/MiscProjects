typedef struct {
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;	
} tip;

struct atom{
	tip element;
	struct atom *sljed;		
};

int brojElementa(struct atom *glava){
	int brojac=0;
	
	while(glava!=NULL){
		brojac++;
		glava = glava->sljed;	
	}
	
	return brojac;
}

int dodaj(struct atom **glavap, tip element){
	
	struct atom *newAtom = (struct atom*)malloc(sizeof(struct atom));
	
	if(newAtom == NULL){
		return 0;
	}
	
	newAtom->element.ocjena = element.ocjena;
	strcpy(newAtom->element.ime, element.ime);
	strcpy(newAtom->element.prezime, element.prezime);
	strcpy(newAtom->element.jmbag, element.jmbag);
	
	newAtom->sljed = *glavap;
	*glavap = newAtom;	
	
	return 1;
}

int minOcjena(struct atom *glava){
	
	int min; 
	if(glava == NULL){
		return -1;
	}	
	
	min=glava->element.ocjena;
	while(glava!=NULL){
		min = (glava->element.ocjena < min) ? glava->element.ocjena : min;
		glava = glava->sljed;	
	}
	
	return min;		
}

float prosjOcjena(struct atom *glava){
	
	float prosjek = 0;
	int size;
	 
	if(glava == NULL){
		return -1;
	}	
	
	size = brojElementa(glava);
	while(glava!=NULL){
		prosjek += glava->element.ocjena;
		glava = glava->sljed;	
	}
	
	return prosjek/size;	
}

int izbaciPrezimeSadrzi(struct atom **glavap, char *prezimePodniz){
	
	char *contains;
	int brojac = 0;
	
	if(*glavap == NULL){
		return 0;
	}
	
	struct atom *dummy = (struct atom*)malloc(sizeof(struct atom));
	dummy->sljed = *glavap;
	
	struct atom *glava = dummy;
	struct atom *deleteAtom;
	
	while(glava->sljed != NULL){
		contains = strstr(glava->sljed->element.prezime, prezimePodniz);
		if(contains != NULL){
			brojac++;
			deleteAtom = glava->sljed;
			glava->sljed = deleteAtom->sljed;
			free(deleteAtom);
			continue;
		}
		glava = glava->sljed;
	}
	
	*glavap = dummy->sljed;
	free(dummy);
	return brojac;
}
