typedef struct
{
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;

struct atom
{
	tip element;
	atom *sljed;
};

int brojElementa(atom *glava)
{
	int ret=0;
	while(glava->sljed) 
	{
		glava = glava->sljed;
		ret++;
	}
	return ret;
}

int dodaj(atom **glavap, tip element)
{
	atom *novi;
	
	if ((novi = (atom*) malloc(sizeof(atom))) == NULL) return 0;
	novi->element = element;
	novi->sljed = *glavap;
	*glavap = novi;
	
	return 1;
}

int minOcjena(atom *glava)
{
	int ret = -1;	
	while(glava) 
	{
		if (glava->element.ocjena < ret || ret == -1) ret = glava->element.ocjena;
		glava = glava->sljed;
	}
	return ret;
}

float prosjOcjena(atom *glava)
{
	int n = 0;	
	float suma = 0;
	
	while(glava) 
	{
		n++;
		suma += glava->element.ocjena;
		glava = glava->sljed;
	}
	
	if (n) return suma / n;
	else return -1;
}

int izbaciPrezimeSadrzi(atom **glavap, char *prezimePodniz)
{
	int ret = 0;
	int i, j, van;
	char *prezime;
	atom *p;
	
	while((*glavap))
	{
		van=0;
		prezime = (*glavap)->element.prezime;

		for(i=0; prezime[i] && !van; i++)
		{
			van=1;
			for(j=0; prezimePodniz[j] && van; j++)
			{
				if (prezime[i+j] != prezimePodniz[j]) van = 0;
			}
		}

		if (van)
		{
			ret++;
			p = *glavap;
			*glavap = p->sljed;
			free(p);
		}
		else
			glavap = &((*glavap)->sljed);			
	}
	
	return ret;
}
