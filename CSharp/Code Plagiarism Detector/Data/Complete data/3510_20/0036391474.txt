typedef struct {
        char ime[20+1];
        char prezime[30+1];
        char jmbag[10+1];
        int ocjena;
} tip;

typedef struct at {
	tip element;
    struct at *sljed;
} atom;

int brojElementa(atom *glava)
{
	atom *tmp; 
	int brojac;
	brojac=0;
	tmp=glava;
	while(tmp)
	{
		tmp=tmp->sljed;
		brojac++;
	}
	return brojac;
}

int dodaj(atom **glavap,tip element)
{
	atom *novi;
	if((novi=(atom *) malloc(sizeof(atom)))==NULL) return 0;
	strcpy((novi->element).ime,element.ime);
	strcpy((novi->element).prezime,element.prezime);
	strcpy((novi->element).jmbag,element.jmbag);
	(novi->element).ocjena=element.ocjena;
	novi->sljed=*glavap;
	*glavap=novi;
	return 1;
}

int maksOcjena(atom *glava)
{
	atom *tmp; 
	int max;
	if(glava==NULL) return -1;
	max=(glava->element).ocjena;
	tmp=glava;
	while(tmp)
	{
		if((tmp->element).ocjena>max) max=(tmp->element).ocjena;
		tmp=tmp->sljed;
	}
	return max;
}

float prosjOcjena(atom *glava)
{
	atom *tmp;
	int suma; 
	int brojac;
	suma=0;
	brojac=0;
  
	if(glava==NULL) return -1;
  
	tmp=glava;
	while(tmp){
		suma=suma+(tmp->element).ocjena;
		tmp=tmp->sljed;
		brojac++;
	}
	return ((float)suma/brojac);
}

int izbaciImePocinjeS(atom **glavap, char *imePocetak)
{
	atom *p;
	atom *pp;
	int brojac=0;
	unsigned int duljina;
	unsigned int dutemp;
	
	duljina=strlen(imePocetak);
	p=*glavap;
	
	while(p)
	{
		dutemp=strlen((p->element).ime);
		
	if((strncmp((p->element).ime,imePocetak,duljina)==0)&&(dutemp>=duljina))
		{
			if (p==*glavap)
			{
				pp=(*glavap)->sljed;
				free(*glavap);
				*glavap=pp;
				p=pp;
				brojac++;
			}
			else
			{		   
				pp=*glavap;
				for(;(pp->sljed)!=p;pp=pp->sljed);
				pp->sljed=p->sljed;
				free(p);
				p=pp->sljed;
				brojac++;
			}
		}
		else p=p->sljed;
	}
	return brojac;
}