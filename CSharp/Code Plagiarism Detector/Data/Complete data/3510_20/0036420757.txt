typedef struct {
        char ime [20+1];
        char prezime [30+1];
        char jmbag [10+1];
        int ocjena;
} tip;

typedef struct x {
        tip element;
        struct x *sljed;
} atom;

int dodaj (atom **glavap, tip element) {
	atom *novi;
	if ((novi=(atom *) malloc(sizeof(atom)))==NULL) return 0;
    strcpy ((novi->element).ime, element.ime);
    strcpy ((novi->element).prezime, element.prezime);
    strcpy ((novi->element).jmbag, element.jmbag);
    (novi->element).ocjena=element.ocjena;
    novi->sljed=*glavap;
    *glavap=novi;
    return 1;
}

int brojElementa (atom *glava) {
	atom *p; 
	int b;
	b=0;
	for (p=glava;p!= NULL;p=p->sljed) b++;
	return b;
}

int maksOcjena (atom *glava) {
  atom *p;
  int bigg;
  
  if (glava==NULL) return -1;
  
  bigg=(glava->element).ocjena;
  for (p=glava;p!=NULL;p=p->sljed)
	  if ((p->element).ocjena>bigg) bigg=(p->element).ocjena;
  return bigg;
}

float prosjOcjena (atom *glava) {
	atom *p;
	int s;
	int u;
	s=0;
	u=0;
	if (glava==NULL) return -1;
	for (p=glava;p!=NULL;p=p->sljed) {
		u++;
		s+=(p->element).ocjena;
	}
	return ((float) s/u);
}

int izbaciImePocinjeS (atom **glavap, char *imePocetak) {
	atom *p,*pp;
	int u;
	u=0;
	for (p=*glavap;p!=NULL; ) {
		if ((strncmp ((p->element).ime, imePocetak,strlen (imePocetak))==0) 
			&& (strlen ((p->element).ime)>=strlen (imePocetak))) {
			if (p==*glavap) {
				pp=(*glavap)->sljed;
				free (*glavap);
				*glavap = pp;
				p = pp;
				u++;
			}
			else {
				for (pp=*glavap;pp->sljed!=p;pp=pp->sljed);
				pp->sljed=p->sljed;
				free (p);
				p=pp->sljed;
				u++;
			}
		}
		else p=p->sljed;
	}
	return u;
}