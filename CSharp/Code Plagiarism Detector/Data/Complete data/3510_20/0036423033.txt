typedef struct {
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;

typedef struct cv{
	tip element;
	struct cv *sljed;
} atom;

int brojElementa(atom *glava){
	if(!glava) return 0;
	return brojElementa(glava->sljed)+1;
}

int dodaj(atom** glavap, tip element){
	atom* novi;
	if((novi=(atom *) malloc(sizeof(atom)))== NULL)
		return 0;
	novi->element = element;
	novi->sljed = *glavap;
	*glavap = novi;
	return 1;
}

int maksOcjena (atom* glava){
	atom* p;
	int max;
	if (!glava) return -1;
	max = glava->element.ocjena;
	for(p = glava; p ; p=p->sljed)
		max= p->element.ocjena > max ? p->element.ocjena : max ;
	return max ;
}

float prosjOcjena(atom* glava){
	atom* p;
	int broj=brojElementa(glava);
	float zbroj=0;
	if (!glava) return -1;
	for(p = glava; p ; p=p->sljed)
		zbroj+=p->element.ocjena;
	return zbroj/broj;
}

int izbaciImePocinjeS (atom **glavap, char *imePocetak){

	int br = 0;
	atom *temp = *glavap;
	atom *prev = *glavap;
	char *pom;
	if (*glavap == NULL) return 0;
	while (temp){
		if (((pom = strstr(temp->element.ime, imePocetak)) != NULL)){
			br++;
			if(temp==*glavap){
				temp=(*glavap)->sljed;
				free(*glavap);
				*glavap=temp;
			}else {
				while(prev->sljed!=temp)
					prev=prev->sljed;
				prev->sljed = temp->sljed;
				free(temp);
				temp=prev->sljed;
			}
		}else temp=temp->sljed;
	};
	return br;
}


