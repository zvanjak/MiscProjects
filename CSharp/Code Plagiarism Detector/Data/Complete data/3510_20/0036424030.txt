typedef struct {
      char ime[20+1];
      char prezime[30+1];
      char jmbag[10+1];
      int  ocjena;
} tip;

struct at 
 {
  tip element;
  struct at *sljed; 
};
typedef struct at atom;

int brojElementa(atom *glava)
{
    int n = 0;
	if (glava)
	{
		n++;
		n += brojElementa (glava->sljed);

	}
	return n;
}

int dodaj (atom **glavap, tip element)
{
	atom *novi;
	if ((novi = (atom *) malloc(sizeof(atom))) == NULL) 
		return 0;
	novi->element = element;	
	novi->sljed = *glavap;
	*glavap = novi;
	return 1;
	
}

int maksOcjena(atom *glava)
{
    int temp, max = 0;
	if (glava)
	{
		temp = glava->element.ocjena;
		max = maksOcjena (glava->sljed);
		if (temp > max)
			max = temp;
	}
	return max;
}
float prosjOcjena(atom *glava)
{
    int i, zbroj = 0;
	float pros = 0;
	atom *p;
	for (i = 0, p = glava; p != NULL; zbroj+= p->element.ocjena, p = p->sljed, i++);
	if (zbroj == 0) return -1;
	pros = (float) zbroj / i;
	return pros;

    	
}
int izbaciImePocinjeS (atom **glavap, char *imePocetak)
{
	if (*glavap)
	{
		int duzina;
		duzina = (int) strlen(imePocetak);
		if (strncmp ((*glavap)->element.ime, imePocetak, duzina) == NULL)
		{
			*glavap = (*glavap)->sljed;
			return izbaciImePocinjeS(&(*glavap), imePocetak) + 1;
		}
		else
			return izbaciImePocinjeS(&(*glavap)->sljed, imePocetak);
	}
	else
		return 0;
}