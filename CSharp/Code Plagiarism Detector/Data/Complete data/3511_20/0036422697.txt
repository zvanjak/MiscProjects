typedef struct{
    char ime[20+1];
    char prezime[30+1];
    char jmbag[10+1];
    int ocjena;
}tip;
typedef struct at{
    tip element;
    struct at *sljed;
}atom;
int brojElementa(atom *glava){
    int broj;
    for(broj=0;glava;glava=glava->sljed)
        broj++;
    return broj;
}
int dodaj (atom **glavap,tip element){
    atom *novi;
    novi=(atom *)malloc(sizeof(atom));
    if(novi==NULL)return 0;
    novi->element=element;
    if(*glavap==NULL){
        *glavap=novi;
        novi->sljed=NULL;
        return 1;
    }
    novi->sljed=*glavap;
    *glavap=novi;
    return 1;
}  
int maksOcjena(atom *glava){
    int max;
    if(glava==NULL)return -1;
    for(max=0;glava;glava=glava->sljed)
        if(max<glava->element.ocjena)max=glava->element.ocjena;
    return max;
}
float prosjOcjena(atom *glava){
    int zbroj,kol;
    float prosj;
    if(glava==NULL)return -1;
    for(zbroj=kol=0;glava;glava=glava->sljed){
        kol++;
        zbroj+=glava->element.ocjena;
    }
    prosj=(float)zbroj/kol;
    return prosj;
}  
int izbaciPrezimePocinjeS (atom **glavap,char * prezimePocetak){
    int izbaci=0,kont,vel=strlen(prezimePocetak);
    atom *pom,*stari;
    for(pom=*glavap,stari=NULL;pom;){
        kont=strncmp(prezimePocetak,pom->element.prezime,vel);
        if(kont==0){
            izbaci++;
            if(pom==*glavap){
                *glavap=pom->sljed;
                free(pom);
                pom=*glavap;
            }else{
                stari->sljed=pom->sljed;
                free(pom);
                pom=stari->sljed;
            }
        }else{
            stari=pom;
            pom=pom->sljed;
        }  
    }    
    return izbaci;
}