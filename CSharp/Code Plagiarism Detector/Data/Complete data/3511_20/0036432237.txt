typedef struct{
        char ime [20+1];
        char prezime [30+1];
        char jmbag[10+1];
        int ocjena;
        }tip;
        
typedef struct at{
        tip element;
        struct at* sljed;
        }atom;
                
int brojElementa(atom* glava){
    atom*z;
    int br=0;
    for(z=glava;z;z=(*z).sljed)
     br++;
     return br;}
     
int dodaj(atom**glavap,tip element){
    atom*novi;
    if((novi=(atom*)malloc(sizeof(atom)))==NULL)return 0;
    strcpy ((novi->element).ime, element.ime);
    strcpy ((novi->element).prezime, element.prezime);
   strcpy ((novi->element).jmbag, element.jmbag);
    (novi->element).ocjena = element.ocjena;
    (*novi).sljed=*glavap;
        *glavap=novi;
        return 1;}
       
            
int maksOcjena(atom*glava){
    atom*z;int maks;
    if(glava==NULL)return -1;
    maks = (glava->element).ocjena;
        for(z=glava;z;z=(*z).sljed)
          if((*z).element.ocjena>maks)
           maks=(*z).element.ocjena;
           return maks;
         }
    
        
float prosjOcjena(atom*glava){
    atom*z;
    int suma=0,broj=0;
    if(glava==NULL)return -1;
    for(z=glava;z;z=(*z).sljed){
      broj++;
      suma+=(*z).element.ocjena;}
      return (float)suma/broj;
      }
      
      
      
int izbaciPrezimePocinjeS(atom **glavap, char *prezimePocetak){
     atom *p, *pp; int num = 0;
     for (p = *glavap; p != NULL; ) {
         if (strstr ((p->element).prezime, prezimePocetak)==(p->element).prezime) {
             if (p == *glavap) {
                 pp = (*glavap)->sljed;
                 free (*glavap);
                 *glavap = pp;
                 p = pp;
                 num++;
                 }
             else {
                 for (pp = *glavap; pp->sljed != p; pp = pp->sljed);
                 pp->sljed = p->sljed;
                 free (p);
                 p = pp->sljed;
                 num++;
                 }
             }
         else p = p->sljed;
         }
     return num;
  }