typedef struct {
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;

typedef struct cv1 {
  tip element;
  struct cv1 *sljed; 
} atom;

int brojElementa(atom *glava){
	if (glava) return brojElementa(glava->sljed) + 1;
	return 0;
}


int dodaj (atom **glavap, tip element) {
	atom *novi;
	if ((novi = (atom *) malloc(sizeof(atom))) == NULL) return 0;
	novi->element = element;
	novi->sljed = *glavap;
    *glavap = novi;
	return 1;
}


int minOcjena(atom *glava){
	if (glava){
		int min;
		min = minOcjena(glava->sljed);	
		min = (min == -1) ? 6 : min;	
		return (glava->element.ocjena < min) ? glava->element.ocjena : min ;
	}
	return -1; 
}

int izbaciPrezimeSadrzi (atom **glavap, char *prezimePodniz){
	int br = 0;
	atom *p;
	while (glavap && *glavap){
		if (strstr((*glavap)->element.prezime, prezimePodniz)){
			p = *glavap;
			*glavap = (*glavap)->sljed;
			free (p);
			br++;
		}
		glavap = ((*glavap) == NULL) ? NULL : &((*glavap)->sljed);
	}
	return br;
}

int izbaciPrezimePocinjeS(atom **glavap, char *prezimePocetak){
	int br = 0;
	atom *p;
	while (glavap && *glavap){
		if (strncmp((*glavap)->element.prezime, prezimePocetak, 1) == 0){
			p = *glavap;
			*glavap = (*glavap)->sljed;
			free (p);
			br++;
		}
		glavap = ((*glavap) == NULL) ? NULL : &((*glavap)->sljed);
	}
	return br;
}