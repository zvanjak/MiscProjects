typedef struct {
	 char ime[20+1];
	 char prezime[30+1];
	 char jmbag [10+1];
	 int ocjena; }tip;

typedef struct s2 {
  tip element;
  struct s2 *sljed;
  }atom;


int brojElementa(atom *glava) {
  atom *p;
  int br=0;
  for(p=glava;p!=NULL;p=p->sljed)
	  br++;
  return br; }

int dodaj (atom **glavap , tip element){
		atom *novi;
	 if((novi=(atom*)malloc(sizeof(atom)))==NULL)
		  return 0;
	 novi->sljed=*glavap;
	 *glavap=novi;
	 return 1;   }

int minOcjena(atom *glava){
	 atom *p;
	 int min = glava->element.ocjena;
	 if(glava==NULL) return (-1);
	 for(p=glava;p!=NULL;p=p->sljed){
			 if(p->element.ocjena<min)
				min=p->element.ocjena; }
		 return min; }

int izbaciPrezimeSadrzi(atom **glavap , char *prezimePodniz) {
int izb=0;
atom *p;
while(*glavap) {
 if(strstr((*glavap)->element.prezime,prezimePodniz)!=NULL) {
	  izb++;
	  p = *glavap;
	  *glavap=(*glavap)->sljed;
	  free(p); }
  else {
	glavap=&((*glavap)->sljed);}
  }
	return izb; }


int izbaciPrezimePocinjeS(atom **glavap , char *prezimePocetak) {
	int izb = 0 ;
	atom *p;
 while (*glavap) {
  if(strncmp((*glavap)->element.prezime,prezimePocetak,strlen(prezimePocetak))==NULL){
		 izb++;
		 p = *glavap;
		 *glavap=(*glavap)->sljed;
		 free(p); }
	else {
		glavap=&((*glavap)->sljed); }
		}
       return izb; }








