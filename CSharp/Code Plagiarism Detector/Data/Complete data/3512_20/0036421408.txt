typedef struct {
      char ime[20+1];
      char prezime[30+1];
      char jmbag[10+1];
      int  ocjena;
} tip;

typedef struct atom {
        tip element;
        atom *sljed;
        };
        
int brojElementa(atom *glava);
int dodaj(atom **glavap, tip element);
int minOcjena(atom *glava);
int izbaciPrezimeSadrzi (atom **glavap, char *prezimePodniz);
int izbaciPrezimePocinjeS (atom **glavap, char * prezimePocetak);
        
int brojElementa(atom *glava){
    if (glava)
    return (1+brojElementa(glava->sljed));
    return 0;
}

int dodaj (atom **glavap, tip element){
    atom *novi;
    if (novi=(atom*)malloc(sizeof(atom))){
       novi->sljed=(*glavap);
       *glavap=novi;
       novi->element=element;
       return 1;
       }
    else
       return 0;
}

int minOcjena(atom *glava){
    atom *trenutni;
    trenutni=glava;
    if (glava==NULL) return -1;
    int oc=5;
    while (trenutni){
       if ((trenutni->element.ocjena)<oc) oc=(trenutni->element.ocjena);
       trenutni=trenutni->sljed;
    }
    return oc;
}


int izbaciPrezimeSadrzi (atom **glavap, char *prezimePodniz){
    int br=0;
    if (*glavap==NULL) return 0;
    if(strstr((*glavap)->element.prezime,prezimePodniz)){
      *glavap=(*glavap)->sljed;
      br++;
      }
    atom *jedan,*drugi;
    jedan=*glavap;
    if (jedan)
    drugi=(*glavap)->sljed;
    else
    drugi=NULL;
    while(drugi){
         if(strstr(drugi->element.prezime,prezimePodniz)){      
         jedan->sljed=drugi->sljed;
         free(drugi);
         br++;
         }
         jedan=jedan->sljed;
         if(jedan)
         drugi=jedan->sljed;
         else
         drugi=NULL;
    }
    return br;
}

int izbaciPrezimePocinjeS (atom **glavap, char *prezimePocetak){
    int br=0;
    if (*glavap==NULL) return 0;
    if(!(strncmp ((*glavap)->element.prezime,prezimePocetak,sizeof(*prezimePocetak)/sizeof(char)))){
      *glavap=(*glavap)->sljed;
      br++;
      }
    atom *jedan,*drugi;
    jedan=*glavap;
    if (jedan)
    drugi=(*glavap)->sljed;
    else
    drugi=NULL;
    while(drugi){
         if(!(strncmp(drugi->element.prezime,prezimePocetak,sizeof(*prezimePocetak)/sizeof(char)))){      
         jedan->sljed=drugi->sljed;
         free(drugi);
         br++;
         }
         jedan=jedan->sljed;
         if(jedan)
         drugi=jedan->sljed;
         else
         drugi=NULL;
    }
    return br;
}     