typedef struct{
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;


typedef struct at {
	tip element;
	struct at *sljed;
} atom;


int dodaj (atom **glavap, tip element){
	atom *novi;

	if ((novi=(atom*) malloc (sizeof(atom))) == NULL) return 0;

	novi->sljed= *glavap;
	novi->element= element;

	*glavap= novi;

	return 1;
}


int brojElementa (atom *glava){
	atom *p=glava;
	int broj=0;
	
	while (p != NULL){
		broj++;
		p=p->sljed;
	}
	return broj;
}


int minOcjena (atom* glava){
	atom *p=glava; int min;

	if (p==NULL) return -1;

	min = p->element.ocjena;
	while (p!=NULL){
		if (p->element.ocjena < min) min =p->element.ocjena;
		p=p->sljed;
	}
	return min;
}



int izbaciPrezimeSadrzi (atom **glavap, char *prezimePodniz){
	atom *tren, *prev;
	int izb=0;

	for(tren=*glavap; tren !=NULL; ){

		if (strstr(tren->element.prezime, prezimePodniz) != NULL){
			if (tren == (*glavap)){
				prev= (*glavap)->sljed;
				free (*glavap);
				(*glavap)= prev;
				tren=prev;
				izb++;
			}else{
				for (prev=*glavap; prev->sljed != tren; prev= prev->sljed);
				prev->sljed= tren->sljed;
				free(tren);
				tren=prev->sljed;
				izb++;
			}
			
		}else{  tren=tren->sljed;}
	}
	return izb;
}



int izbaciPrezimePocinjeS (atom **glavap, char *prezimePocetak){
	atom *tren, *prev;
	int izb=0;

	for(tren=*glavap; tren !=NULL; ){

		if ((strncmp (tren->element.prezime, prezimePocetak, strlen(prezimePocetak)) == 0)&&
			(strlen(tren->element.prezime) >= strlen (prezimePocetak))){
			if (tren == (*glavap)){
				prev= (*glavap)->sljed;
				free (*glavap);
				(*glavap)= prev;
				tren=prev;
				izb++;
			}else{
				for (prev=*glavap; prev->sljed != tren; prev= prev->sljed);
				prev->sljed= tren->sljed;
				free(tren);
				tren=prev->sljed;
				izb++;
			}
			
		}else{  tren=tren->sljed;}
	}
	return izb;
	
}
