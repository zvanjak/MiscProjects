typedef struct {
	char ime[20+1];
	char prezime[30+1];
	char jmbag[10+1];
	int ocjena;
} tip;

typedef struct atom {
	tip podatak;
	struct atom *sljed;
};

int brojElementa(atom *glavap) {
	if (!glavap) return -1;
	int n = 0;
	while (glavap) {
		n++;
		glavap = glavap->sljed;
	}
	return n;
}

int dodaj(atom **glavap, tip element) {
	atom *novi = (atom *) malloc(sizeof(atom));
	if (!novi) return 0;
	novi->podatak = element;
	novi->sljed = *glavap;
	*glavap = novi;
	return 1;
}

int minOcjena(atom *glavap) {
	if (!glavap) return 0;
	int min = glavap->podatak.ocjena;
	while(glavap = glavap->sljed) {
		if (glavap->podatak.ocjena < min) {
			min = glavap->podatak.ocjena;
		}
	}
	return min;
}

int izbaciPrezimeSadrzi(atom **glavap, char *prezimePodniz) {
	int n = 0;
	while(*glavap) {
		if (strstr((*glavap)->podatak.prezime, prezimePodniz)) {
			*glavap = (*glavap)->sljed;
			n++;
		} else {
			glavap = &((*glavap)->sljed);
		}
	}
	return n;
}

int izbaciPrezimePocinjeS(atom **glavap, char *prezimePocetak) {
	int n = 0;
	int velicina = (int) strlen(prezimePocetak);
	while(*glavap) {
		if (!strncmp((*glavap)->podatak.prezime, prezimePocetak, velicina)) {
			*glavap = (*glavap)->sljed;
			n++;
		} else {
			glavap = &((*glavap)->sljed);
		}
	}
	return n;
}