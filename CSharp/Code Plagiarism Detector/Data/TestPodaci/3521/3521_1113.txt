void  ConvertToXML (char * inputField, char * outputField)
{

int i, j = 0;
int flag = 0;

for(i=0; inputField[i] != 0; i++)
	{
	if(inputField[i]=='#')
		{
		switch(flag)
			{
			case 0:
				{
				outputField[j]='<';
				j++;
				outputField[j]='o';
				j++;
				outputField[j]='s';
				j++;
				outputField[j]='o';
				j++;
				outputField[j]='b';
				j++;
				outputField[j]='a';
				j++;
				outputField[j]='>';
				j++;
				outputField[j]='\n';
				j++;
				
				outputField[j]='<';
				j++;
				outputField[j]='i';
				j++;
				outputField[j]='m';
				j++;
				outputField[j]='e';
				j++;
				outputField[j]='>';
				j++;

				flag++;
				break;
				}

			case 1:
				{
				outputField[j]='<';
				j++;
				outputField[j]='/';
				j++;
				outputField[j]='i';
				j++;
				outputField[j]='m';
				j++;
				outputField[j]='e';
				j++;
				outputField[j]='>';
				j++;
				outputField[j]='\n';
				j++;
				
				outputField[j]='<';
				j++;
				outputField[j]='p';
				j++;
				outputField[j]='r';
				j++;
				outputField[j]='e';
				j++;
				outputField[j]='z';
				j++;
				outputField[j]='i';
				j++;
				outputField[j]='m';
				j++;
				outputField[j]='e';
				j++;
				outputField[j]='>';
				j++;

				flag++;
				break;
				}

			case 2:
				{
				outputField[j]='<';
				j++;
				outputField[j]='/';
				j++;
				outputField[j]='p';
				j++;
				outputField[j]='r';
				j++;
				outputField[j]='e';
				j++;
				outputField[j]='z';
				j++;
				outputField[j]='i';
				j++;
				outputField[j]='m';
				j++;
				outputField[j]='e';
				j++;
				outputField[j]='>';
				j++;
				outputField[j]='\n';
				j++;
				
				outputField[j]='<';
				j++;
				outputField[j]='j';
				j++;
				outputField[j]='m';
				j++;
				outputField[j]='b';
				j++;
				outputField[j]='g';
				j++;
				outputField[j]='>';
				j++;

				flag++;
				break;
				}

			case 3:
				{
				outputField[j]='<';
				j++;
				outputField[j]='/';
				j++;
				outputField[j]='j';
				j++;
				outputField[j]='m';
				j++;
				outputField[j]='b';
				j++;
				outputField[j]='g';
				j++;
				outputField[j]='>';
				j++;
				outputField[j]='\n';
				j++;
				
				outputField[j]='<';
				j++;
				outputField[j]='/';
				j++;
				outputField[j]='o';
				j++;
				outputField[j]='s';
				j++;
				outputField[j]='o';
				j++;
				outputField[j]='b';
				j++;
				outputField[j]='a';
				j++;
				outputField[j]='>';
				j++;


				flag=0;
				break;
				}
			}
		}
	else
		{
		outputField[j] = inputField[i];
		j++;
		}
	}
}